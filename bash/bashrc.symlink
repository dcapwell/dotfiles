# if a process fails in a pipe, fail everything
set -o pipefail

case "$(uname -s)" in
  Darwin)
    abs_path=$(readlink -n "$HOME/.bashrc")
    ;;
  *)
    abs_path=$(readlink -f "$HOME/.bashrc")
    ;;
esac

# find all .bash files, and sort by name, allowing each file to add ordering
export DOTFILE_HOME="$(dirname $(dirname "$abs_path"))"

# Add to path
if [[ "${DOTFILE_SET:-false}" == false ]]; then
  export ORIGINAL_PATH="$PATH"
  for path in $(find "$DOTFILE_HOME" -name "*.path" | perl -e "print sort{(split '/', \$a)[-1] <=> (split '/', \$b)[-1]}<>")
  do
    for p in $(bash "$path"); do
      export PATH="$PATH:$p"
    done
  done

  # don't export, new shell needs to reload
  DOTFILE_SET=true
fi

# make sure aliases work for scripts
shopt -s expand_aliases

for path in $(find "$DOTFILE_HOME" -name "*.bash" | perl -e "print sort{(split '/', \$a)[-1] <=> (split '/', \$b)[-1]}<>")
do
  source "$path" || true
done
unset path abs_path
